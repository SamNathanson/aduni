#!/usr/local/bin/ruby
# bubble sort, written in ruby

$passes = 0			# total passes for a sort


# ----------------------------
#        BUBBLE SORT
# ----------------------------
def bubbleSort(array)
  bound = array.length - 2
  for i in 0..(array.length - 1)
    t = 0
    for j in 0..bound
      if array[j] > array[j+1]
	swap(array, j, j+1)
	t = j
      end
    end
    $passes += 1
    return if t == 0
    bound = t
  end
end

# ----------------------------
#       INSERTION  SORT
# ----------------------------
def insertionSort(array)
  for j in 0..(array.length-1)
    key = array[j]
    i = j - 1 
    while (i >= 0 && array[i] > key)
      array[i+1] = array[i]
      i -= 1
    end
    array[i+1] = key
    display(array) 
  end
end

# ----------------------------
#       MERGE  SORT
# ----------------------------
def mergeSort(array, p, r)
  if p < r
    q = (p+r) / 2
    mergeSort(array, p, q)
    mergeSort(array, q + 1, r)
    merge(array, p, q + 1, r + 1)
  end
end

def merge(array, p, q, r)
  temp = []
  left = p
  left_count = q - p
  right = q 
  right_count = r - q 
  i = 0;

  while (left_count != 0 && right_count != 0) 
    if array[left] > array[right]
      temp[i] = array[right]
      i += 1
      right_count -= 1
      right += 1
    else
      temp[i] = array[left]
      i += 1
      left_count -= 1
      left += 1
    end
  end

  while left_count > 0
    temp[i] = array[left]
    i += 1
    left_count -= 1
    left += 1
  end
  
  while right_count > 0
    temp[i] = array[right]
    i += 1
    right_count -= 1
    right += 1
  end

  i = 0
  for j in p..r - 1
    array[j] = temp[i]
    i += 1
  end
end

def swap(array, a, b)
  temp = array[a]
  array[a] = array[b]
  array[b] = temp
end

def display(array)
  print array.join(" "), "\n"
end  




def main
  # some test arrays
  array = [4 , 1 , 5, 10 , 6, 7, 2, 3, 8, 9]
#  array = [1, 2, 3, 4, 8, 7, 6, 5]
#  array = [2, 1, 3, 4]
#  array = 
      [ 503, 87, 512, 61, 908, 170, 897, 275, 653, 426, 154, 509,
      612,677, 765, 703 ]

  display(array)

  if(ARGV[0] == "merge") 
    print "using merge sort\n"
    mergeSort(array, 0, array.length - 1)
  end
  if(ARGV[0] == "bubble") 
    print "using bubble sort\n"
    bubbleSort(array)
  end
  if(ARGV[0] == "insertion") 
    print "using insertion sort"
    insertionSort(array)
  end

  display(array)
#  print "total passes: #{$passes}\n"
end



main

