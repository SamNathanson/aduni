%!
%	Generated by pcal v4.3
%
/titlefont /Times-Bold def
/dayfont /Times-Bold def
/notesfont /Helvetica-Narrow def
/notesfontsize 6 def
/month_names [
	(January) (February) (March) (April) (May) (June)
	(July) (August) (September) (October) (November) (December) ] def
/day_names [
	(Sunday) (Monday) (Tuesday) (Wednesday) (Thursday) (Friday)
	(Saturday) ] def
/linesep (\056p) def
/day_gray [ true false false false false false true ] def
/holiday_gray true def
/logical_gray (gray) def
/rval 90 def
/xsval 1 def
/ysval 1 def
/xtval 46 def
/ytval -120 def
/draw-moons false def
/julian-dates false def
/fill-boxes true def
/prev_small_cal 40 def
/next_small_cal 41 def
/dategray 0.8 def
/fillgray 0.9 def
/SM 0 def
/MED 1 def
/LG 2 def
/titlefontsize   [ 60 52 48 ] def
/datefontsize    [ 60 48 25 ] def
/weekdayfontsize [  0 28 12 ] def
/footfontsize 12 def
/titlepos [ 19 43 25 ] def
/Y0 35 def
/daywidth 100 def
/dayheight 80 def
/gridwidth daywidth 7 mul def
/gridheight dayheight 6 mul def
/negdaywidth daywidth neg def
/negdayheight dayheight neg def
/neggridwidth gridwidth neg def
/neggridheight gridheight neg def
/gridlinewidth 1.0 def
/charlinewidth 0.1 def
/moonlinewidth 0.1 def
/hangingindent (   ) def
/center {
/width exch def
/str exch def
width str stringwidth pop sub 2 div 0 rmoveto str show
} def
/strcat {
2 copy
length exch length
dup 3 -1 roll add
string
dup 0 6 -1 roll putinterval
dup 3 -1 roll 4 -1 roll putinterval
} def
/prtday {
day 3 string cvs
color (black) eq {
show
} if
color (gray) eq {
dategray setgray show
} if
color (outline) eq {
true charpath stroke
} if
color (outline_gray) eq {
true charpath
gsave dategray setgray fill grestore
stroke
} if
} def
/nextbox {
day startbox add 7 mod 0 eq
{ neggridwidth daywidth add negdayheight rmoveto }
{ daywidth 0 rmoveto }
ifelse
} def
/boxpos {
dup 7 mod daywidth mul
exch 7 idiv negdayheight mul Y0 add
} def
/datepos {
startbox add 1 sub dup 7 mod daywidth mul
exch 7 idiv negdayheight mul Y0 add
} def
/drawtitle {
titlefont findfont titlefontsize calsize get scalefont setfont
/month_name month_names month 1 sub get def
/yearstring year 10 string cvs def
0 Y0 titlepos calsize get add moveto
month_name (  ) strcat yearstring strcat gridwidth center
} def
/drawdaynames {
dayfont findfont weekdayfontsize calsize get scalefont setfont
0 1 6 {
/i exch def
i daywidth mul Y0 5 add moveto
day_names i get
daywidth center
} for
} def
/drawgrid {
gridlinewidth setlinewidth
0 daywidth gridwidth {
Y0 moveto
0 neggridheight rlineto
stroke
} for
0 negdayheight neggridheight {
0 exch Y0 add moveto
gridwidth 0 rlineto
stroke
} for
} def
/drawnums {
dayfont findfont datefontsize calsize get scalefont setfont
/fontdiff datefontsize calsize get datefontsize LG get sub def
charlinewidth setlinewidth
1 datepos 20 fontdiff add sub exch 5 add exch moveto
1 1 ndays {
/day exch def
/color (black) def
calsize SM ne {
/gray day_gray day startbox add 1 sub 7 mod get def
holidays { day eq { /gray holiday_gray def } if } forall
gray {
/color logical_gray def
} if
} if
gsave
prtday
grestore
nextbox
} for
} def
/drawjnums {
notesfont findfont notesfontsize scalefont setfont
1 datepos dayheight 3 sub sub exch daywidth 3 sub add exch moveto
1 1 ndays {
/day exch def
/jday jdstart day add 1 sub def
/str jday 3 string cvs def
julian-dates true eq {
/str str ( \050) strcat yearlen jday sub 3 string cvs
strcat (\051) strcat def
} if
gsave
str dup stringwidth pop 0 exch sub 0 rmoveto show
grestore
nextbox
} for
} def
/fillboxes {
/last exch def
/first exch def
first 1 last {
/box exch def
/fillit true def
calsize LG eq {
noteboxes { box eq { /fillit false def } if } forall
box prev_small_cal eq box next_small_cal eq or {
/fillit false def
} if
} if
fillit {
box boxpos moveto
gsave
fillgray setgray
daywidth 0 rlineto
0 negdayheight rlineto
negdaywidth 0 rlineto
closepath fill
grestore
} if
} for
} def
/drawfill {
0 startbox 1 sub fillboxes
startbox ndays add 41 fillboxes
} def
/footstrings {
titlefont findfont footfontsize scalefont setfont
/bottomrow { neggridheight 20 add } def
0 bottomrow moveto
Lfootstring show
gridwidth Rfootstring stringwidth pop sub bottomrow moveto
Rfootstring show
0 bottomrow moveto
Cfootstring gridwidth center
} def
/daytext {
/mytext exch def /day exch def
notesfont findfont notesfontsize scalefont setfont
day datepos datefontsize LG get notesfontsize add 2 sub sub dup
/ypos exch def exch 2 add exch moveto
currentpoint pop /LM exch def /RM LM 95 add def
showtext
} def
/holidaytext {
notesfont findfont notesfontsize scalefont setfont
/mytext exch def /day exch def
/dwidth day 10 lt {20} {33} ifelse def
/mwidth do-moon-p {16} {0} ifelse def
day datepos notesfontsize 2 add sub dup
/ypos exch def exch dwidth add exch moveto
currentpoint pop /LM exch def /RM LM 97 dwidth mwidth add sub add def
showtext
} def
/notetext {
/mytext exch def /box exch def
notesheading () eq {
box boxpos notesfontsize 2 add sub dup
} {
box boxpos 11 sub exch 4 add exch moveto
dayfont findfont weekdayfontsize LG get scalefont setfont
notesheading show
box boxpos notesfontsize 13 add sub dup
} ifelse
/ypos exch def exch 4 add exch moveto
notesfont findfont notesfontsize scalefont setfont
/LM currentpoint pop def /RM LM 93 add def
showtext
} def
/crlf {
ypos notesfontsize sub /ypos exch def LM ypos moveto
} def
/prstr {
dup stringwidth pop currentpoint pop
add RM gt { crlf hangingindent show } if show
} def
/showtext {
mytext {
dup linesep eq
{ crlf pop }
{ prstr ( ) show }
ifelse
} forall
} def
/startpage {
rval rotate
xsval ysval scale
xtval ytval translate
} def
/calendar
{
drawtitle
calsize SM ne {
drawdaynames
} if
calsize LG eq {
footstrings
} if
drawnums
julian-dates false ne calsize LG eq and {
drawjnums
} if
fill-boxes {
drawfill
} if
drawgrid
draw-moons false ne calsize LG eq and {
drawmoons
} if
0 0 moveto
} def
/printmonth_l {
/calsize MED def
posn 0 eq {
startpage
footstrings
} if
gsave
.226 .25 scale
posn 4 mod 800 mul
posn 4 idiv -700 mul 150 add
translate
calendar
grestore
} def
/printmonth_p {
/calsize MED def
/footfontsize 15 def
posn 0 eq {
gsave
startpage
0 20 translate
footstrings
grestore
/sv_ysval ysval def
/ysval ysval 1.675 mul def
startpage
/ysval sv_ysval def
} if
gsave
.304 .194 scale
posn 3 mod 800 mul
posn 3 idiv -700 mul 300 add
translate
calendar
grestore
} def
/printsmallcals {
/calsize SM def
/sv_startbox startbox def
prev_small_cal 0 ge {
/year p_year def
/month p_month def
/startbox p_startbox def
/ndays p_ndays def
gsave
prev_small_cal boxpos translate
.138 .138 scale
12 -120 translate
calendar
grestore
} if
next_small_cal 0 ge {
/year n_year def
/month n_month def
/startbox n_startbox def
/ndays n_ndays def
gsave
next_small_cal boxpos translate
.138 .138 scale
12 -120 translate
calendar
grestore
} if
/startbox sv_startbox def
} def
/printmonth {
startpage
/calsize LG def
calendar
printsmallcals
} def
/domoon {
/phase exch def
gsave
currentpoint translate
newpath
phase halfperiod .01 sub ge phase halfperiod .01 add le and {
0 0 radius
0 360 arc stroke
}
{
0 0 radius
0 0 radius
phase halfperiod lt {
270 90 arc stroke
0 radius neg moveto
270 90 arcn
}
{
90 270 arc stroke
0 radius neg moveto
270 90 arc
/phase phase halfperiod sub def
} ifelse
/x1 quartperiod phase sub rect mul def
/y1 x1 abs 2 sqrt div def
x1
y1
x1
y1 neg
0
radius neg
curveto
fill
} ifelse
grestore
} def
/do-moon-p {
draw-moons (some) eq {
/p false def
quarter_moons { day eq { /p true def } if } forall
p
}
{
draw-moons
} ifelse
} def
/drawmoons {
/halfperiod 0.5 def
/quartperiod 0.25 def
/radius 6 def
/offset radius 3 add def
/rect radius 2 sqrt mul quartperiod div def
/n 0 def
gsave
moonlinewidth setlinewidth
1 datepos offset sub exch daywidth add offset sub exch moveto
1 1 ndays {
/day exch def
do-moon-p {
moon_phases n get domoon
/n n 1 add def
} if
nextbox
} for
grestore
} def

/year 2001 def
/month 1 def
/startbox 1 def
/ndays 31 def
/noteboxes [ ] def
/holidays [ ] def
/Lfootstring () def
/Cfootstring () def
/Rfootstring () def
/notesheading (Notes) def
/p_year 2000 def
/p_month 12 def
/p_startbox 5 def
/p_ndays 31 def
/n_year 2001 def
/n_month 2 def
/n_startbox 4 def
/n_ndays 28 def
printmonth
showpage
