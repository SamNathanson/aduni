# Library for acceptance tests

# ====================================================================
class FileCache

  # Cache file read requests so that rereading a file will just return
  # the latest in-memory copy of that file.  Only keep `@cache_size'
  # files around.

  def initialize(size=4)
    @cache_size = size
    @cache = {}
    @fifo = []
  end

  def read(fn)
    result = @cache[fn]
    if result.nil? then
      result = read_file(fn)
      @cache[fn] = result
      @fifo << fn
      if @fifo.length > @cache_size then
	oldest = @fifo.shift
	@cache[oldest] = nil
      end
    end
    result
  end

  private

  def read_file(file_name)
    file = File.open(file_name)
    lines = file.readlines.join('')
    file.close
    lines
  end
end


# ====================================================================
module BasicTests

  $file_cache = FileCache.new

  def generate_html
    if not File.exist?("acceptance/index.html") then
      system "./source2html -d acceptance -i accepttest.rc " +
	"acceptance/*.e " +
	"acceptance/*.el " +
	"acceptance/*.java " +
	"acceptance/*.pl " +
	"acceptance/*.py " +
	"acceptance/*.rb " +
	"acceptance/*.sh " +
	"acceptance/*_implicit " +
	""
    end
  end

  def read_file(file_name)
    $file_cache.read(file_name)
  end

  def basic_tests(text)
    assert_match /<!-- Generated by source2html \(language: [A-Za-z]+\) -->/, text
    assert_match /<title>Project: source2html, File: [-A-Za-z0-9_.\/]+<\/title>/, text
    assert_match /\[ <a href="index.html">Index<\/a> \]/, text
    check_generated_by(text)
  end

  def check_generated_by(text)
    assert_match /<em>Generated by \[ <a href="http:\/\/w3.one.net\/~jweirich\/tools\/source2html">source2html<\/a> \]<\/em>/, text
  end

end

