#!/usr/local/bin/ruby

require 'runit/testcase'
require 'runit/cui/testrunner'

require 'acceptance/acceptlib'

$last_suite = RUNIT::TestSuite.new

# --------------------------------------------------------------------

class TestIndex < RUNIT::TestCase
  include BasicTests

  def setup
    generate_html
  end

  def teardown
  end

  def test_basics
    text = read_file("acceptance/index.html")
    assert_match /<!--\s+Generated by source2html\s+-->/, text
    assert_match /<title>Project .* Index<\/title>/, text
    assert_match /\[ <a href="index.html">Index<\/a> \]/, text
    check_generated_by(text)
  end

  def test_index_items
    text = read_file("acceptance/index.html")
    assert_match /<li><a href="acceptlib_rb.html">acceptlib.rb<\/a>/, text
    assert_match /<li><a href="rubycode_rb.html">rubycode.rb<\/a>/, text
    assert_match /<li><a href="eiffelcode_e.html">eiffelcode.e<\/a>/, text
  end

  def test_package
    text = read_file("acceptance/index.html")
    assert text !~ /\(\)/
    assert_match /(source2html.stuff)/, text
  end

  def test_blurb
    text = read_file("acceptance/index.html")
    assert_match /Blurb for <em>source2html<\/em>/, text
  end
end

$last_suite.add_test (TestIndex.suite)



# --------------------------------------------------------------------

if __FILE__ == $0 then
  RUNIT::CUI::TestRunner.quiet_mode = true
  RUNIT::CUI::TestRunner.run ($last_suite)
end
